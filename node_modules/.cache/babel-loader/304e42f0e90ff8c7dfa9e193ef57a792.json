{"ast":null,"code":"var _jsxFileName = \"/Users/seojiwon/Desktop/ReactProgramming_Doit/src/03/Counter.jsx\",\n    _s = $RefreshSig$();\n\n// 리액트 16.8 이전 버전에서는 함수형 컴포넌트에서는 상태를 관리할 수 없었다.\n// 리액트 16.8 에서 Hooks 라는 기능이 도입되면서 함수형 컴포넌트에서도 상태를 관리할 수 있게 되었다.\n// 이번에는 useState 라는 함수를 사용해보게 되는데, 이게 바로 리액트의 Hooks 중 하나이다.\nimport { useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Counter() {\n  _s();\n\n  const [number, setNumber] = useState(100);\n\n  const increase = () => {\n    console.log(\"number = \", number);\n    setNumber(number + 1);\n    console.log(\"number = \", number);\n  };\n\n  const decrease = () => {\n    console.log(\"number = \", number);\n    setNumber(number - 1);\n    console.log(\"number = \", number);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increase,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrease,\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"yIQe0CyPwVeZZEIQR+bVDBrzc7g=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/seojiwon/Desktop/ReactProgramming_Doit/src/03/Counter.jsx"],"names":["useState","React","Counter","number","setNumber","increase","console","log","decrease"],"mappings":";;;AAAA;AACA;AACA;AAGA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,GAAD,CAApC;;AAEA,QAAMK,QAAQ,GAAG,MAAO;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAzB;AACAC,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAzB;AACH,GAJD;;AAMA,QAAMK,QAAQ,GAAG,MAAM;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAzB;AACAC,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAzB;AACH,GAJD;;AAMA,sBACA;AAAA,4BACI;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOH;;GAtBQN,O;;KAAAA,O;AAwBT,eAAeA,OAAf","sourcesContent":["// 리액트 16.8 이전 버전에서는 함수형 컴포넌트에서는 상태를 관리할 수 없었다.\n// 리액트 16.8 에서 Hooks 라는 기능이 도입되면서 함수형 컴포넌트에서도 상태를 관리할 수 있게 되었다.\n// 이번에는 useState 라는 함수를 사용해보게 되는데, 이게 바로 리액트의 Hooks 중 하나이다.\n\n\nimport { useState } from 'react';\nimport React from 'react';\n\nfunction Counter() {\n    const [number, setNumber] = useState(100);\n\n    const increase = () =>  {\n        console.log(\"number = \", number);\n        setNumber(number + 1);\n        console.log(\"number = \", number);\n    }\n\n    const decrease = () => {\n        console.log(\"number = \", number);\n        setNumber(number - 1);\n        console.log(\"number = \", number);\n    }\n\n    return (\n    <div>\n        <h1>{number}</h1>\n        <button onClick={increase}>+1</button>\n        <button onClick={decrease}>-1</button>\n    </div>\n    );\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}